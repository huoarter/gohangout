// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protoLogEvent.proto

package protoLogEvent

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//reference from
//https://github.com/apache/logging-log4j2/blob/release-2.x/log4j-core/src/main/java/org/apache/logging/log4j/core/impl/Log4jLogEvent.java
type ProtoLogEvent struct {
	LoggerFqcn           string            `protobuf:"bytes,1,opt,name=loggerFqcn,proto3" json:"loggerFqcn,omitempty"`
	Marker               string            `protobuf:"bytes,2,opt,name=marker,proto3" json:"marker,omitempty"`
	Level                string            `protobuf:"bytes,3,opt,name=level,proto3" json:"level,omitempty"`
	LoggerName           string            `protobuf:"bytes,4,opt,name=loggerName,proto3" json:"loggerName,omitempty"`
	Message              string            `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	TimeMillis           int64             `protobuf:"varint,6,opt,name=timeMillis,proto3" json:"timeMillis,omitempty"`
	Thrown               string            `protobuf:"bytes,7,opt,name=thrown,proto3" json:"thrown,omitempty"`
	ThrownProxy          string            `protobuf:"bytes,8,opt,name=thrownProxy,proto3" json:"thrownProxy,omitempty"`
	ContextMap           map[string]string `protobuf:"bytes,9,rep,name=contextMap,proto3" json:"contextMap,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ContextStack         string            `protobuf:"bytes,10,opt,name=contextStack,proto3" json:"contextStack,omitempty"`
	ThreadName           string            `protobuf:"bytes,11,opt,name=threadName,proto3" json:"threadName,omitempty"`
	Source               string            `protobuf:"bytes,12,opt,name=source,proto3" json:"source,omitempty"`
	IncludeLocation      bool              `protobuf:"varint,13,opt,name=includeLocation,proto3" json:"includeLocation,omitempty"`
	EndOfBatch           bool              `protobuf:"varint,14,opt,name=endOfBatch,proto3" json:"endOfBatch,omitempty"`
	ContainerMeta        *ContainerMeta    `protobuf:"bytes,15,opt,name=containerMeta,proto3" json:"containerMeta,omitempty"`
	NanoTime             int64             `protobuf:"varint,16,opt,name=nanoTime,proto3" json:"nanoTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ProtoLogEvent) Reset()         { *m = ProtoLogEvent{} }
func (m *ProtoLogEvent) String() string { return proto.CompactTextString(m) }
func (*ProtoLogEvent) ProtoMessage()    {}
func (*ProtoLogEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_d06a7ef4f156a5af, []int{0}
}

func (m *ProtoLogEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProtoLogEvent.Unmarshal(m, b)
}
func (m *ProtoLogEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProtoLogEvent.Marshal(b, m, deterministic)
}
func (m *ProtoLogEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProtoLogEvent.Merge(m, src)
}
func (m *ProtoLogEvent) XXX_Size() int {
	return xxx_messageInfo_ProtoLogEvent.Size(m)
}
func (m *ProtoLogEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_ProtoLogEvent.DiscardUnknown(m)
}

var xxx_messageInfo_ProtoLogEvent proto.InternalMessageInfo

func (m *ProtoLogEvent) GetLoggerFqcn() string {
	if m != nil {
		return m.LoggerFqcn
	}
	return ""
}

func (m *ProtoLogEvent) GetMarker() string {
	if m != nil {
		return m.Marker
	}
	return ""
}

func (m *ProtoLogEvent) GetLevel() string {
	if m != nil {
		return m.Level
	}
	return ""
}

func (m *ProtoLogEvent) GetLoggerName() string {
	if m != nil {
		return m.LoggerName
	}
	return ""
}

func (m *ProtoLogEvent) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ProtoLogEvent) GetTimeMillis() int64 {
	if m != nil {
		return m.TimeMillis
	}
	return 0
}

func (m *ProtoLogEvent) GetThrown() string {
	if m != nil {
		return m.Thrown
	}
	return ""
}

func (m *ProtoLogEvent) GetThrownProxy() string {
	if m != nil {
		return m.ThrownProxy
	}
	return ""
}

func (m *ProtoLogEvent) GetContextMap() map[string]string {
	if m != nil {
		return m.ContextMap
	}
	return nil
}

func (m *ProtoLogEvent) GetContextStack() string {
	if m != nil {
		return m.ContextStack
	}
	return ""
}

func (m *ProtoLogEvent) GetThreadName() string {
	if m != nil {
		return m.ThreadName
	}
	return ""
}

func (m *ProtoLogEvent) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *ProtoLogEvent) GetIncludeLocation() bool {
	if m != nil {
		return m.IncludeLocation
	}
	return false
}

func (m *ProtoLogEvent) GetEndOfBatch() bool {
	if m != nil {
		return m.EndOfBatch
	}
	return false
}

func (m *ProtoLogEvent) GetContainerMeta() *ContainerMeta {
	if m != nil {
		return m.ContainerMeta
	}
	return nil
}

func (m *ProtoLogEvent) GetNanoTime() int64 {
	if m != nil {
		return m.NanoTime
	}
	return 0
}

type ContainerMeta struct {
	ContainerId          string   `protobuf:"bytes,1,opt,name=containerId,proto3" json:"containerId,omitempty"`
	AppName              string   `protobuf:"bytes,2,opt,name=appName,proto3" json:"appName,omitempty"`
	ProcName             string   `protobuf:"bytes,3,opt,name=procName,proto3" json:"procName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContainerMeta) Reset()         { *m = ContainerMeta{} }
func (m *ContainerMeta) String() string { return proto.CompactTextString(m) }
func (*ContainerMeta) ProtoMessage()    {}
func (*ContainerMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_d06a7ef4f156a5af, []int{1}
}

func (m *ContainerMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerMeta.Unmarshal(m, b)
}
func (m *ContainerMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerMeta.Marshal(b, m, deterministic)
}
func (m *ContainerMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerMeta.Merge(m, src)
}
func (m *ContainerMeta) XXX_Size() int {
	return xxx_messageInfo_ContainerMeta.Size(m)
}
func (m *ContainerMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerMeta.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerMeta proto.InternalMessageInfo

func (m *ContainerMeta) GetContainerId() string {
	if m != nil {
		return m.ContainerId
	}
	return ""
}

func (m *ContainerMeta) GetAppName() string {
	if m != nil {
		return m.AppName
	}
	return ""
}

func (m *ContainerMeta) GetProcName() string {
	if m != nil {
		return m.ProcName
	}
	return ""
}

func init() {
	proto.RegisterType((*ProtoLogEvent)(nil), "leyan_proto.log.ProtoLogEvent")
	proto.RegisterMapType((map[string]string)(nil), "leyan_proto.log.ProtoLogEvent.ContextMapEntry")
	proto.RegisterType((*ContainerMeta)(nil), "leyan_proto.log.ContainerMeta")
}

func init() {
	proto.RegisterFile("protoLogEvent.proto", fileDescriptor_d06a7ef4f156a5af)
}

var fileDescriptor_d06a7ef4f156a5af = []byte{
	// 463 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x93, 0xcf, 0x6f, 0xd3, 0x30,
	0x14, 0xc7, 0x95, 0x95, 0x76, 0xdd, 0xeb, 0x4a, 0x87, 0x41, 0xc8, 0xda, 0x61, 0x8a, 0x7a, 0xca,
	0x65, 0xa9, 0x34, 0x2e, 0x08, 0xc1, 0x65, 0x63, 0x48, 0x48, 0xeb, 0xa8, 0x32, 0x4e, 0x5c, 0x90,
	0x71, 0x1f, 0x6e, 0x54, 0xc7, 0x0e, 0xae, 0x5b, 0xd6, 0xff, 0x80, 0x3f, 0x1b, 0xd9, 0xce, 0x5a,
	0xa7, 0xbb, 0x54, 0xf9, 0x7c, 0x9f, 0xfd, 0x7e, 0x7c, 0xfd, 0x0a, 0xaf, 0x6b, 0xa3, 0xad, 0xbe,
	0xd3, 0xe2, 0x76, 0x83, 0xca, 0xe6, 0x9e, 0xc8, 0x48, 0xe2, 0x96, 0xa9, 0x9f, 0x1e, 0x72, 0xa9,
	0xc5, 0xf8, 0x5f, 0x17, 0x86, 0xb3, 0xf8, 0x20, 0xb9, 0x00, 0x90, 0x5a, 0x08, 0x34, 0x5f, 0xfe,
	0x70, 0x45, 0x93, 0x34, 0xc9, 0x4e, 0x8a, 0x48, 0x21, 0x6f, 0xa1, 0x57, 0x31, 0xb3, 0x44, 0x43,
	0x8f, 0x7c, 0xac, 0x21, 0xf2, 0x06, 0xba, 0x12, 0x37, 0x28, 0x69, 0xc7, 0xcb, 0x01, 0xf6, 0xd9,
	0xee, 0x59, 0x85, 0xf4, 0x45, 0x9c, 0xcd, 0x29, 0x84, 0xc2, 0x71, 0x85, 0xab, 0x15, 0x13, 0x48,
	0xbb, 0x3e, 0xf8, 0x84, 0xee, 0xa6, 0x2d, 0x2b, 0x9c, 0x96, 0x52, 0x96, 0x2b, 0xda, 0x4b, 0x93,
	0xac, 0x53, 0x44, 0x8a, 0xeb, 0xc3, 0x2e, 0x8c, 0xfe, 0xab, 0xe8, 0x71, 0xe8, 0x23, 0x10, 0x49,
	0x61, 0x10, 0xbe, 0x66, 0x46, 0x3f, 0x6e, 0x69, 0xdf, 0x07, 0x63, 0x89, 0xdc, 0x03, 0x70, 0xad,
	0x2c, 0x3e, 0xda, 0x29, 0xab, 0xe9, 0x49, 0xda, 0xc9, 0x06, 0x57, 0x79, 0x7e, 0xe0, 0x4c, 0xde,
	0x72, 0x25, 0xbf, 0xd9, 0x5d, 0xb8, 0x55, 0xd6, 0x6c, 0x8b, 0x28, 0x03, 0x19, 0xc3, 0x69, 0x43,
	0x0f, 0x96, 0xf1, 0x25, 0x05, 0x5f, 0xb2, 0xa5, 0xf9, 0x69, 0x16, 0x06, 0xd9, 0xdc, 0xfb, 0x30,
	0x08, 0x3e, 0xec, 0x15, 0x37, 0xcd, 0x4a, 0xaf, 0x0d, 0x47, 0x7a, 0x1a, 0xa6, 0x09, 0x44, 0x32,
	0x18, 0x95, 0x8a, 0xcb, 0xf5, 0x1c, 0xef, 0x34, 0x67, 0xb6, 0xd4, 0x8a, 0x0e, 0xd3, 0x24, 0xeb,
	0x17, 0x87, 0xb2, 0xab, 0x80, 0x6a, 0xfe, 0xed, 0xf7, 0x35, 0xb3, 0x7c, 0x41, 0x5f, 0xfa, 0x43,
	0x91, 0x42, 0x3e, 0xc3, 0xd0, 0x75, 0xc4, 0x4a, 0x85, 0x66, 0x8a, 0x96, 0xd1, 0x51, 0x9a, 0x64,
	0x83, 0xab, 0x8b, 0x67, 0x83, 0xdf, 0xc4, 0xa7, 0x8a, 0xf6, 0x25, 0x72, 0x0e, 0x7d, 0xc5, 0x94,
	0xfe, 0x5e, 0x56, 0x48, 0xcf, 0xfc, 0x9b, 0xec, 0xf8, 0xfc, 0x13, 0x8c, 0x0e, 0x6c, 0x22, 0x67,
	0xd0, 0x59, 0xe2, 0xb6, 0xd9, 0x22, 0xf7, 0xe9, 0xd6, 0x64, 0xc3, 0xe4, 0x1a, 0x9b, 0xed, 0x09,
	0xf0, 0xe1, 0xe8, 0x7d, 0x32, 0x16, 0x30, 0x6c, 0x95, 0x76, 0x2f, 0xb9, 0x2b, 0xfe, 0x75, 0xde,
	0x24, 0x89, 0x25, 0xb7, 0x3d, 0xac, 0xae, 0xbd, 0xa5, 0x21, 0xdd, 0x13, 0xba, 0x3e, 0x6b, 0xa3,
	0xb9, 0x0f, 0x85, 0x85, 0xdc, 0xf1, 0xf5, 0x03, 0xbc, 0xe2, 0xba, 0x0a, 0x73, 0x5b, 0xe4, 0x0b,
	0x37, 0xf5, 0x2c, 0xf9, 0xf1, 0x51, 0x94, 0x36, 0x12, 0xb9, 0xae, 0x26, 0x9e, 0xc2, 0xef, 0xa5,
	0x37, 0xe8, 0x52, 0x68, 0xc9, 0x94, 0x98, 0x48, 0x2d, 0x26, 0xad, 0xff, 0xd7, 0xaf, 0x9e, 0xc7,
	0x77, 0xff, 0x03, 0x00, 0x00, 0xff, 0xff, 0x27, 0x6a, 0xaf, 0x6e, 0x77, 0x03, 0x00, 0x00,
}
